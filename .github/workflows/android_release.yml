# Only for building release version by Github CI workflow

name: Android release apk CI

on:
  push:
    branches: [ "master" ]
    paths:
      #- 'idTech4Amm/**'
      #- 'Q3E/**'
      - '.github/workflows/android_release.yml'
  pull_request:
    branches: [ "master" ]
    paths:
      #- 'idTech4Amm/**'
      #- 'Q3E/**'
      - '.github/workflows/android_release.yml'

jobs:
  build-android:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .

    steps:
      - name: Setup env
        id: env
        run: |
          release=69
          echo "release=${release}" >> $GITHUB_OUTPUT
          echo "version=1.1.0harmattan${release}-5" >> $GITHUB_OUTPUT

      - name: Mound working directory
        run: |
          u=`whoami`
          sudo mkdir /mnt/diii4a
          sudo chown $u /mnt -R
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup jdk 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'
          cache: gradle

      - name: Setup build environment
        run: |
          sudo apt-get update
          sudo apt-get -y install build-essential # libtinfo5

      - name: Change build directory
        run: |
          echo "Move to working directory"
          mv ./* /mnt/diii4a/
          cd /mnt/diii4a
          echo "work directory: `pwd`"
          chmod +x ./gradlew
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          chmod +x ./gradlew
          mkdir -p ${GITHUB_WORKSPACE}/libs/armeabi-v7a
          mkdir -p ${GITHUB_WORKSPACE}/libs/arm64-v8a
          mkdir -p ${GITHUB_WORKSPACE}/apks
          mkdir -p ${GITHUB_WORKSPACE}/builtin_libs
          mv Q3E/libs/arm64-v8a ${GITHUB_WORKSPACE}/builtin_libs/
          mv Q3E/libs/armeabi-v7a ${GITHUB_WORKSPACE}/builtin_libs/

      - name: Build arm64 with Gradle
        id: arm64
        run: |
          cd /mnt/diii4a
          arch=arm64-v8a
          barch=-Pabifilters=${arch}
          build_libs=Q3E/libs/${arch}
          backup_libs=${GITHUB_WORKSPACE}/libs/${arch}
          # copy 64-bit libraries
          echo "Copy 64-bit libraries"
          cp -rf ${GITHUB_WORKSPACE}/builtin_libs/${arch} Q3E/libs/
          # build Xash3d only
          echo "Build Xash3D libraries"
          bargs="$barch -Pcmake_options=-DGAME_DOOM3=OFF,-DGAME_RTCW=OFF,-DGAME_QUAKE3=OFF,-DGAME_QUAKE2=OFF,-DGAME_QUAKE1=OFF,-DGAME_TDM=OFF,-DGAME_DOOM3BFG=OFF,-DGAME_DOOM=OFF,-DGAME_ETW=OFF,-DGAME_REALRTCW=OFF,-DGAME_FTEQW=OFF,-DGAME_JK=OFF,-DGAME_SERIOUSSAM=OFF,-DGAME_REALRTCW=OFF,-DGAME_URT=OFF,-DGAME_SOURCE=OFF"
          ./gradlew assembleRelease $bargs
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Copy Xash3D libraries to libs"
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libxash3d*so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libfilesystem_stdio.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libclient_cs.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libmenu_cs.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libserver_cs.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libserver_yapb.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libclient_hl.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libserver_hl.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libmenu_hl.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libtf15client*so ${backup_libs}
          cp ${backup_libs}/* ${build_libs}/
          ls ${build_libs}
          # build Source only
          echo "Clean builds"
          ./gradlew clean $bargs
          rm -rf Q3E/.cxx Q3E/build idTech4Amm/build
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Build Source libraries"
          # ,-DBUILD_SOURCE_HL2=OFF,-DBUILD_SOURCE_HL2MP=OFF,-DBUILD_SOURCE_EPISODIC=OFF,-DBUILD_SOURCE_HL1=OFF,-DBUILD_SOURCE_HL1MP=OFF,-DBUILD_SOURCE_PORTAL=OFF
          bargs="$barch -Pcmake_options=-DGAME_DOOM3=OFF,-DGAME_RTCW=OFF,-DGAME_QUAKE3=OFF,-DGAME_QUAKE2=OFF,-DGAME_QUAKE1=OFF,-DGAME_TDM=OFF,-DGAME_DOOM3BFG=OFF,-DGAME_DOOM=OFF,-DGAME_ETW=OFF,-DGAME_REALRTCW=OFF,-DGAME_FTEQW=OFF,-DGAME_JK=OFF,-DGAME_SERIOUSSAM=OFF,-DGAME_REALRTCW=OFF,-DGAME_URT=OFF,-DGAME_XASH3D=OFF"
          ./gradlew assembleRelease $bargs
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Copy Source libraries to libs"
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libsource*so ${backup_libs}
          cp ${backup_libs}/* ${build_libs}/
          ls ${build_libs}
          # build idTech4 only
          echo "Clean builds"
          ./gradlew clean $bargs
          rm -rf Q3E/.cxx Q3E/build idTech4Amm/build
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Build idTech4"
          bargs="$barch -Pcmake_options=-DGAME_RTCW=OFF,-DGAME_QUAKE3=OFF,-DGAME_QUAKE2=OFF,-DGAME_QUAKE1=OFF,-DGAME_TDM=OFF,-DGAME_DOOM=OFF,-DGAME_ETW=OFF,-DGAME_REALRTCW=OFF,-DGAME_FTEQW=OFF,-DGAME_JK=OFF,-DGAME_SERIOUSSAM=OFF,-DGAME_REALRTCW=OFF,-DGAME_URT=OFF,-DGAME_XASH3D=OFF,-DGAME_SOURCE=OFF"
          ./gradlew assembleRelease $bargs
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Copy idTech4 libraries to libs"
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libdoom3.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libquake4.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libprey.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libRBDoom3BFG*.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libgame.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libd3xp.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libcdoom.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libd3le.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libfraggingfree.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libhardcorps.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libhexeneoc.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/liblibrecoop.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/liblibrecoopxp.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/liboverthinked.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libperfected.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libperfected_roe.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/librivensin.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libsabot.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libtfphobos.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libq4game.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libhardqore.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libpreygame.so ${backup_libs}
          cp ${backup_libs}/* ${build_libs}/
          ls ${build_libs}
          # build non-idTech4 only
          echo "Clean builds"
          ./gradlew clean $bargs
          rm -rf Q3E/.cxx Q3E/build idTech4Amm/build
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Build final apk"
          bargs="$barch -Pcmake_options=-DGAME_XASH3D=OFF,-DGAME_SOURCE=OFF,-DGAME_DOOM3=OFF,-DGAME_DOOM3BFG=OFF"
          ./gradlew assembleRelease $bargs
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Copy ${arch} release apk"
          apk_file=${GITHUB_WORKSPACE}/apks/idTech4A++_${{ steps.env.outputs.version }}_arm64.apk
          mv ./idTech4Amm/build/outputs/apk/release/idTech4Amm-release.apk ${apk_file}
          echo "Clean builds"
          ./gradlew clean $bargs
          rm -rf Q3E/.cxx Q3E/build idTech4Amm/build
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          rm -rf Q3E/libs/{arch}
          echo "<<< disk usage"
          echo "apk=${apk_file}" >> $GITHUB_OUTPUT

      - name: Build arm32 with Gradle
        id: arm32
        run: |
          cd /mnt/diii4a
          arch=armeabi-v7a
          barch=-Pabifilters=${arch}
          build_libs=Q3E/libs/${arch}
          backup_libs=${GITHUB_WORKSPACE}/libs/${arch}
          # copy 32-bit libraries
          echo "Copy 32-bit libraries"
          cp -rf ${GITHUB_WORKSPACE}/builtin_libs/${arch} Q3E/libs/
          # build Xash3d only
          echo "Build Xash3D libraries"
          bargs="$barch -Pcmake_options=-DGAME_DOOM3=OFF,-DGAME_RTCW=OFF,-DGAME_QUAKE3=OFF,-DGAME_QUAKE2=OFF,-DGAME_QUAKE1=OFF,-DGAME_TDM=OFF,-DGAME_DOOM3BFG=OFF,-DGAME_DOOM=OFF,-DGAME_ETW=OFF,-DGAME_REALRTCW=OFF,-DGAME_FTEQW=OFF,-DGAME_JK=OFF,-DGAME_SERIOUSSAM=OFF,-DGAME_REALRTCW=OFF,-DGAME_URT=OFF,-DGAME_SOURCE=OFF"
          ./gradlew assembleRelease $bargs
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Copy Xash3D libraries to libs"
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libxash3d*so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libfilesystem_stdio.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libclient_cs.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libmenu_cs.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libserver_cs.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libserver_yapb.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libclient_hl.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libserver_hl.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libmenu_hl.so ${backup_libs}
          cp ${backup_libs}/* ${build_libs}/
          ls ${build_libs}
          # build Source only
          echo "Clean builds"
          ./gradlew clean $bargs
          rm -rf Q3E/.cxx Q3E/build idTech4Amm/build
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Build Source libraries"
          # ,-DBUILD_SOURCE_HL2=OFF,-DBUILD_SOURCE_HL2MP=OFF,-DBUILD_SOURCE_EPISODIC=OFF,-DBUILD_SOURCE_HL1=OFF,-DBUILD_SOURCE_HL1MP=OFF,-DBUILD_SOURCE_PORTAL=OFF
          bargs="$barch -Pcmake_options=-DGAME_DOOM3=OFF,-DGAME_RTCW=OFF,-DGAME_QUAKE3=OFF,-DGAME_QUAKE2=OFF,-DGAME_QUAKE1=OFF,-DGAME_TDM=OFF,-DGAME_DOOM3BFG=OFF,-DGAME_DOOM=OFF,-DGAME_ETW=OFF,-DGAME_REALRTCW=OFF,-DGAME_FTEQW=OFF,-DGAME_JK=OFF,-DGAME_SERIOUSSAM=OFF,-DGAME_REALRTCW=OFF,-DGAME_URT=OFF,-DGAME_XASH3D=OFF"
          ./gradlew assembleRelease $bargs
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Copy Source libraries to libs"
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libsource*so ${backup_libs}
          cp ${backup_libs}/* ${build_libs}/
          ls ${build_libs}
          # build idTech4 only
          echo "Clean builds"
          ./gradlew clean $bargs
          rm -rf Q3E/.cxx Q3E/build idTech4Amm/build
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Build idTech4"
          bargs="$barch -Pcmake_options=-DGAME_RTCW=OFF,-DGAME_QUAKE3=OFF,-DGAME_QUAKE2=OFF,-DGAME_QUAKE1=OFF,-DGAME_TDM=OFF,-DGAME_DOOM=OFF,-DGAME_ETW=OFF,-DGAME_REALRTCW=OFF,-DGAME_FTEQW=OFF,-DGAME_JK=OFF,-DGAME_SERIOUSSAM=OFF,-DGAME_REALRTCW=OFF,-DGAME_URT=OFF,-DGAME_XASH3D=OFF,-DGAME_SOURCE=OFF"
          ./gradlew assembleRelease $bargs
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Copy idTech4 libraries to libs"
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libdoom3.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libquake4.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libprey.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libRBDoom3BFG*.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libgame.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libd3xp.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libcdoom.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libd3le.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libfraggingfree.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libhardcorps.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libhexeneoc.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/liblibrecoop.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/liblibrecoopxp.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/liboverthinked.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libperfected.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libperfected_roe.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/librivensin.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libsabot.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libtfphobos.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libq4game.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libhardqore.so ${backup_libs}
          cp -f Q3E/build/intermediates/library_jni/release/jni/${arch}/libpreygame.so ${backup_libs}
          cp ${backup_libs}/* ${build_libs}/
          ls ${build_libs}
          # build non-idTech4 only
          echo "Clean builds"
          ./gradlew clean $bargs
          rm -rf Q3E/.cxx Q3E/build idTech4Amm/build
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Build final apk"
          bargs="$barch -Pcmake_options=-DGAME_XASH3D=OFF,-DGAME_SOURCE=OFF,-DGAME_DOOM3=OFF,-DGAME_DOOM3BFG=OFF"
          ./gradlew assembleRelease $bargs
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Copy ${arch} release apk"
          apk_file=${GITHUB_WORKSPACE}/apks/idTech4A++_${{ steps.env.outputs.version }}_arm32.apk
          mv ./idTech4Amm/build/outputs/apk/release/idTech4Amm-release.apk ${apk_file}
          echo "Clean builds"
          ./gradlew clean $bargs
          rm -rf Q3E/.cxx Q3E/build idTech4Amm/build
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          rm -rf Q3E/libs/{arch}
          echo "<<< disk usage"
          echo "apk=${apk_file}" >> $GITHUB_OUTPUT

      - name: Build all with Gradle
        id: all
        run: |
          cd /mnt/diii4a
          # copy built-in libraries
          echo "Copy built-in libraries"
          cp -rf ${GITHUB_WORKSPACE}/builtin_libs/armeabi-v7a Q3E/libs/
          cp -rf ${GITHUB_WORKSPACE}/builtin_libs/arm64-v8a Q3E/libs/
          echo "Copy last build libraries"
          cp ${GITHUB_WORKSPACE}/libs/armeabi-v7a/* Q3E/libs/armeabi-v7a/
          cp ${GITHUB_WORKSPACE}/libs/arm64-v8a/* Q3E/libs/arm64-v8a/
          echo "Build final apk"
          bargs="-Pcmake_options=-DGAME_XASH3D=OFF,-DGAME_SOURCE=OFF,-DGAME_DOOM3=OFF,-DGAME_DOOM3BFG=OFF"
          ./gradlew assembleRelease $bargs
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "Copy release apk"
          apk_file=${GITHUB_WORKSPACE}/apks/idTech4A++_${{ steps.env.outputs.version }}.apk
          mv ./idTech4Amm/build/outputs/apk/release/idTech4Amm-release.apk ${apk_file}
          echo "Clean builds"
          ./gradlew clean $bargs
          rm -rf Q3E/.cxx Q3E/build idTech4Amm/build
          echo "disk usage: >>>"
          df -h
          du -ch | tail -n -1
          echo "<<< disk usage"
          echo "apk=${apk_file}" >> $GITHUB_OUTPUT

      - name: Delete tag and release
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: android_release
          delete_release: true
          repo: glKarin/com.n0n3m4.diii4a
          github_token: ${{ secrets.TOKEN }}

      - name: Get release date time
        id: release_datetime
        uses: Kaven-Universe/github-action-current-date-time@v1
        with:
          format: "YYYYMMDD-HHmmss"

      - name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.TOKEN }}"
          automatic_release_tag: "android_release"
          prerelease: true
          title: "[${{steps.release_datetime.outputs.time}}] Android release build test BSE (Non-release. Automatic CI builds)"
          files: |
            ${{ steps.arm64.outputs.apk }}
            ${{ steps.arm32.outputs.apk }}
            ${{ steps.all.outputs.apk }}
